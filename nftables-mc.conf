#!/usr/sbin/nft -f

# Reset all existing rules to prevent conflicts (save the current rules if you need them)
flush ruleset

# CHANGE THIS VALUE! Define the interface for external connections to this server
define interface_wan = eth0

# Create a routing table called "global" to handle IPv4 and IPv6
table inet global {

	# Create a routing chain for external INbound connections
	chain input_wan {
		# Allow traffic for the Minecraft server
		# Set limits to control the number of connection attempts. Connections from an address that exceeds the number of possible connections are dropped
		tcp dport 25565 limit rate over { 15/minute, 3/second } drop
		# Set limits to control the speed of an INbound connection. Connections from an address that exceeds the limit are dropped
		tcp dport 25565 limit rate 1 mbytes/second drop

		# Allow SSH traffic with control of the number of connection attempts. Connections from an address that exceeds the number of possible connections are dropped
		tcp dport 2022 ct state new limit rate over 5/minute drop
	}

	# Create a primary routing chain for external INbound connections
	chain input {
		# By default, we drop all traffic that does not fit any of the rules
		type filter hook input priority filter; policy drop;

		# Allow traffic for successfully established connections, drop invalid ones
		ct state vmap { established : accept, related : accept, invalid : drop }

		# Dropping spoofed local traffic from external connections
		iif != lo ip daddr 127.0.0.1/8 drop
		iif != lo ip6 daddr ::1/128 drop

		# Dropping spoofed traffic from reserved or private addresses from external connections
		# BE CAREFUL WHEN ACTIVATING THIS RULE
		# iifname $interface_wan ip saddr { 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16 } drop

		# Dropping suspicious traffic from the reserved port list from external connections
		# BE CAREFUL WHEN ACTIVATING THIS RULE
		# iifname $interface_wan tcp sport 0-1023 drop

		# Allow pings of different types with control over the number of requests, pings in excess will be dropped
		meta l4proto icmp icmp type { destination-unreachable, router-solicitation, router-advertisement, time-exceeded, parameter-problem } accept limit rate over 5/second drop
		meta l4proto ipv6-icmp icmpv6 type { destination-unreachable, packet-too-big, time-exceeded, parameter-problem, mld-listener-query, mld-listener-report, mld-listener-reduction, nd-router-solicit, nd-router-advert, nd-neighbor-solicit, nd-neighbor-advert, ind-neighbor-solicit, ind-neighbor-advert, mld2-listener-report } accept limit rate over 5/second drop

		# Allow local traffic, everything else is handled by the relevant chains
		iifname vmap { lo : accept, $interface_wan : jump input_wan }

		# Traffic that does not match any rule is processed by the default policy (dropping)
	}

	# Create a routing chain for forwarding, necessary for the WireGuard server
	chain forward {
		# By default, we drop all traffic that does not fit any of the rules
		type filter hook forward priority filter; policy drop;
	}
}
